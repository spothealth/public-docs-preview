{
  "openapi": "3.0.3",
  "info": {
    "title": "Spot API v2",
    "version": "2.0.0",
    "description": "API Docs for Spot API"
  },
  "paths": {
    "/api/v2/kits/": {
      "get": {
        "operationId": "api_v2_list_kits",
        "description": "Query your kits and return a summary, sorted by creation date. Providing any query params will further filter the results to only those that match the query params.",
        "parameters": [
          {
            "in": "query",
            "name": "results",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "required": false
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve kits associated with this email address."
          },
          {
            "in": "query",
            "name": "first_name",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve kits associated with this first name."
          },
          {
            "in": "query",
            "name": "kit_type",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve kits associated with this kit type. Case insensitive."
          },
          {
            "in": "query",
            "name": "last_name",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve kits associated with this last name."
          },
          {
            "in": "query",
            "name": "phone",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve kits associated with this phone number."
          },
          {
            "in": "query",
            "name": "kit_status",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve kits with this status. Case insensitive."
          },
          {
            "in": "query",
            "name": "sample_status",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve kits whose sample has this status. Case insensitive."
          }
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "kit_id": {
                        "type": "string"
                      },
                      "kit_type": {
                        "type": "string"
                      },
                      "order_id": {
                        "type": "string"
                      },
                      "kit_status": {
                        "type": "string"
                      },
                      "sample_status": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/kits/{public_id}/": {
      "get": {
        "operationId": "api_v2_get_kit",
        "description": "Returns an individual kit with the given kit id.",
        "parameters": [
          {
            "in": "path",
            "name": "public_id",
            "schema": {
              "type": "string"
            },
            "description": "ID of the kit to retrieve.",
            "required": true
          }
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Kit"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Unspecified response body"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Unspecified response body"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/orders/": {
      "get": {
        "operationId": "api_v1_orders_retrieve",
        "description": "Get a list of orders associated with the user making the request. Providing any query params will further filter the results to only those that match the query params.",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve orders associated with this email address."
          },
          {
            "in": "query",
            "name": "first_name",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve orders associated with this first name."
          },
          {
            "in": "query",
            "name": "last_name",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve orders associated with this last name."
          },
          {
            "in": "query",
            "name": "phone",
            "schema": {
              "type": "string"
            },
            "description": "Only retrieve orders associated with this phone number."
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "canceled",
                "completed",
                "in_progress",
                "pending"
              ]
            },
            "description": "Only retrieve orders that have this status."
          }
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Unspecified response body"
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "api_v1_order_create",
        "description": "Create an order for delivering kits to a client, which will be created with a status of 'pending'.The order will be created with the user making the request as the 'placed_by' user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrder"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v2/orders/{public_id}/": {
      "get": {
        "operationId": "api_v1_orders_retrieve_2",
        "description": "Retrieve a singular order matching the provided ID.",
        "parameters": [
          {
            "in": "query",
            "name": "order_id",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the order to retrieve."
          },
          {
            "in": "path",
            "name": "public_id",
            "schema": {
              "type": "string"
            },
            "description": "The ID of the order to retrieve.",
            "required": true
          }
        ],
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "Unspecified response body"
                }
              }
            },
            "description": ""
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/tokens/patient_registration/": {
      "post": {
        "operationId": "api_v1_tokens_patient_registration_create",
        "description": "Generate a one-time-use registration token for a patient with a lifetime of 10 minutes.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientRegistrationToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientRegistrationToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientRegistrationToken"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "tokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientRegistrationTokenResponse"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Address": {
        "type": "object",
        "properties": {
          "street1": {
            "type": "string",
            "description": "Recipient's address."
          },
          "street2": {
            "oneOf": [
              {
                "type": "string",
                "description": "Second line of recipient's address."
              },
              {
                "type": "null"
              }
            ]
          },
          "city": {
            "type": "string",
            "description": "Recipient's city of residence."
          },
          "state": {
            "type": "string",
            "description": "Recipient's state of residence."
          },
          "country": {
            "type": "string",
            "description": "Recipient's country of residence.",
            "enum": [
              "US",
              "CA"
            ]
          },
          "zip": {
            "type": "string",
            "description": "Recipient's zip code."
          }
        },
        "required": [
          "city",
          "state",
          "street1",
          "zip"
        ]
      },
      "AssignKits": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string"
          },
          "kit_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bypass_address_validation": {
            "type": "boolean"
          }
        },
        "required": [
          "kit_ids",
          "order_id"
        ]
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "error"
        ]
      },
      "BuildKit": {
        "type": "object",
        "properties": {
          "kit_public_id": {
            "type": "string",
            "maxLength": 255
          },
          "sample_public_id": {
            "type": "string",
            "maxLength": 255
          },
          "tracking_number": {
            "type": "string",
            "maxLength": 255
          },
          "kit_type_public_id": {
            "type": "string",
            "maxLength": 255
          },
          "lot_public_id": {
            "type": "string",
            "maxLength": 255
          },
          "assemblers": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "kit_public_id",
          "kit_type_public_id",
          "sample_public_id",
          "tracking_number"
        ]
      },
      "CreateOrder": {
        "type": "object",
        "properties": {
          "kit_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of all the kit types to place in the order."
          },
          "recipient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Recipient"
              }
            ],
            "description": "Dictionary containing the recipient's personal information."
          },
          "client_order_id": {
            "type": "string",
            "description": "Optional metadata field for client use."
          },
          "client_customer_id": {
            "type": "string",
            "description": "Optional metadata field for client use."
          }
        },
        "required": [
          "kit_types",
          "recipient"
        ]
      },
      "CreateOrderResponse": {
        "type": "object",
        "properties": {
          "kit_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "shipment_to_customer": {
            "type": "object",
            "additionalProperties": {}
          },
          "registered_to": {
            "type": "object",
            "additionalProperties": {}
          },
          "panels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "samples": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          }
        },
        "required": [
          "events",
          "kit_id",
          "panels",
          "registered_to",
          "samples",
          "shipment_to_customer",
          "status",
          "type"
        ]
      },
      "CreatePatient": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the patient to be created."
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the patient to be created."
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email of the patient to be created."
          },
          "phone": {
            "type": "string",
            "description": "Optional phone number of the patient to be created."
          },
          "sex": {
            "type": "string",
            "description": "The biological sex of the patient to be created."
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "The date of birth of the patient to be created."
          }
        },
        "required": [
          "date_of_birth",
          "email",
          "first_name",
          "last_name",
          "sex"
        ]
      },
      "CreatePatientRegistrationToken": {
        "type": "object",
        "properties": {
          "patient_id": {
            "type": "string",
            "description": "UUID of the patient."
          }
        },
        "required": [
          "patient_id"
        ]
      },
      "Kit": {
        "type": "object",
        "properties": {
          "kit_id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KitEvent"
            }
          },
          "shipment_to_customer": {
            "type": "object",
            "properties": {
              "tracking_number": {
                "type": "string"
              },
              "carrier": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "registered_to": {
            "type": "object",
            "properties": {
              "patient_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date"
              },
              "sex": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          },
          "sample": {
            "type": "object",
            "properties": {
              "sample_id": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "events": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SampleEvent"
                }
              },
              "type": {
                "type": "string"
              },
              "shipments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "tracking_number": {
                      "type": "string"
                    },
                    "carrier": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "panel": {
                "type": "string"
              },
              "report": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Report"
                  },
                  {
                    "type": "null",
                    "description": "No report has been generated for this sample."
                  }
                ]
              }
            }
          }
        }
      },
      "KitEvent": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/KitStatus"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KitStatus": {
        "type": "string",
        "description": "The new status of the kit.",
        "enum": [
          "preparing",
          "in_transit",
          "delivered",
          "delivery_exception",
          "registered",
          "cancelled"
        ]
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "error"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "order_id": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "recipient": {
            "$ref": "#/components/schemas/Recipient"
          },
          "kit_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "kits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Kit"
            }
          }
        }
      },
      "PatientRegistrationTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "token"
        ]
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Recipient's first name."
          },
          "last_name": {
            "type": "string",
            "description": "Recipient's last name."
          },
          "email": {
            "type": "string",
            "description": "Recipient's email."
          },
          "phone": {
            "type": "string",
            "description": "Recipient's phone number, as a string."
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        },
        "required": [
          "address",
          "email",
          "first_name",
          "last_name",
          "phone"
        ]
      },
      "Report": {
        "type": "object",
        "properties": {
          "report_id": {
            "type": "string"
          },
          "results": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ResultBlood"
                }
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ResultDNA"
                }
              }
            ]
          },
          "panel": {
            "type": "string"
          },
          "pdf": {
            "type": "string",
            "format": "uri"
          },
          "txt": {
            "type": "string",
            "format": "uri"
          },
          "individual": {
            "type": "object",
            "properties": {
              "patient_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string",
                "format": "date"
              },
              "sex": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            }
          },
          "date_collected": {
            "type": "string",
            "format": "date-time"
          },
          "date_received": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ResultBlood": {
        "type": "object",
        "properties": {
          "result_type": {
            "type": "string",
            "enum": [
              "blood"
            ]
          },
          "name": {
            "type": "string",
            "description": "The biomarker that was analyzed."
          },
          "time_collected": {
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "unit_of_measure": {
            "type": "string"
          },
          "result_level": {
            "type": "string"
          },
          "range_minimum": {
            "type": "string"
          },
          "range_maximum": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "ResultDNA": {
        "type": "object",
        "properties": {
          "result_type": {
            "type": "string",
            "enum": [
              "DNA"
            ]
          },
          "name": {
            "type": "string",
            "description": "The biomarker that was analyzed."
          },
          "time_collected": {
            "type": "string",
            "format": "date-time"
          },
          "result": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "SampleEvent": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SampleStatus"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SampleStatus": {
        "type": "string",
        "description": "The new status of the sample.",
        "enum": [
          "awaiting_collection",
          "collection_exception",
          "delivery_exception",
          "delivered",
          "in_transit",
          "received",
          "resulted",
          "partially_resulted",
          "extra_quality_checks",
          "cancelled"
        ]
      },
      "UploadDnaResults": {
        "type": "object",
        "properties": {
          "sample_id": {
            "type": "string"
          },
          "results": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "results",
          "sample_id"
        ]
      },
      "UploadDnaResultsResponse": {
        "type": "object",
        "properties": {
          "report": {
            "type": "string"
          }
        },
        "required": [
          "report"
        ]
      }
    },
    "securitySchemes": {
      "tokenAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Token-based authentication with required prefix \"Token\""
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
